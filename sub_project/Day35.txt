1. **Node.js의 기본 개념 중 이벤트 기반 비동기 처리의 특징은 무엇인가요?** -> B
    
    A) 다수의 스레드를 사용하여 작업을 처리한다.
    
    B) 작업 완료까지 기다리지 않고 다른 작업을 계속 수행한다.
    
    C) 모든 작업을 동기적으로 처리한다.
    
    D) CPU 집약적인 작업에 최적화되어 있다.
    
2. **libuv는 Node.js에서 어떤 역할을 담당하나요?** -> B
    
    A) 자바스크립트 코드를 컴파일한다.
    
    B) 비동기 I/O 작업을 처리한다.
    
    C) 웹 서버를 구축한다.
    
    D) 데이터베이스와의 연결을 관리한다.
    
3. **Node.js의 이벤트 루프(Event Loop)는 무엇을 관리하나요?** -> B
    
    A) CPU 작업을 최적화한다.
    
    B) 비동기 작업의 콜백을 처리한다.
    
    C) 메모리 관리를 수행한다.
    
    D) 네트워크 요청을 저장한다.
    
4. **스트림(Stream)의 주요 이점은 무엇인가요?** -> B
    
    A) 데이터를 한 번에 모두 메모리에 로드한다.
    
    B) 데이터를 작은 청크 단위로 처리하여 메모리 사용을 줄인다.
    
    C) 데이터를 동기적으로 처리한다.
    
    D) 데이터의 보안을 강화한다.
    
5. **fs 모듈은 무엇을 위해 사용되나요?** B
    
    A) HTTP 요청을 처리하기 위해.
    
    B) 파일 시스템과 상호작용하기 위해.
    
    C) 데이터베이스 연결을 위해.
    
    D) 네트워크 소켓을 관리하기 위해.
    
6. **Node.js에서 Readable 스트림의 역할은 무엇인가요?** -> B
    
    A) 데이터를 쓰기 위해 사용된다.
    
    B) 데이터를 읽기 위해 사용된다.
    
    C) 데이터를 변환하기 위해 사용된다.
    
    D) 네트워크 소켓을 관리하기 위해 사용된다.
    
7. **Node.js의 단일 스레드 아키텍처는 어떤 장점을 제공하나요?** -> C
    
    A) 동시성 처리가 불가능하다.
    
    B) 스레드 동기화 문제가 발생한다.
    
    C) 스레드 관리 오버헤드가 줄어든다.
    
    D) 높은 메모리 사용을 요구한다.
    
8. **process.nextTick()은 Node.js에서 무엇을 위한 것인가요?** -> A
    
    A) 현재 이벤트 루프 단계가 끝난 후 즉시 콜백을 실행한다.
    
    B) 새로운 스레드를 생성한다.
    
    C) 파일을 동기적으로 읽는다.
    
    D) 네트워크 요청을 보낸다.
    
9. **Node.js에서 pipelining을 사용하는 주된 이유는 무엇인가요?** -> A
    
    A) 여러 스트림을 효율적으로 연결하여 데이터를 처리하기 위해.
    
    B) 데이터를 동기적으로 처리하기 위해.
    
    C) 메모리 사용량을 늘리기 위해.
    
    D) 보안성을 강화하기 위해.
    
10. **Node.js에서 Transform 스트림은 어떤 기능을 수행하나요?** -> C
    
    A) 데이터를 읽기만 한다.
    
    B) 데이터를 쓰기만 한다.
    
    C) 데이터를 읽고 변환하여 쓴다.
    
    D) 데이터를 암호화한다.
